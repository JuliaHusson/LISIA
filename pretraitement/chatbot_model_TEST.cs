// This file was automatically generated by VS extension Windows Machine Learning Code Generator v3
// from model file chatbot_model_TEST.onnx
// Warning: This file may get overwritten if you add add an onnx file with the same name
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Windows.Media;
using Windows.Storage;
using Windows.Storage.Streams;
using Windows.AI.MachineLearning;
namespace pretraitement
{
    
    public sealed class chatbot_model_TESTInput
    {
        public TensorFloat dense_input; // shape(-1,104)
    }
    
    public sealed class chatbot_model_TESTOutput
    {
        public TensorFloat dense_output; // shape(-1,20)
    }
    
    public sealed class chatbot_model_TESTModel
    {
        private LearningModel model;
        private LearningModelSession session;
        private LearningModelBinding binding;
        public static async Task<chatbot_model_TESTModel> CreateFromStreamAsync(IRandomAccessStreamReference stream)
        {
            chatbot_model_TESTModel learningModel = new chatbot_model_TESTModel();
            learningModel.model = await LearningModel.LoadFromStreamAsync(stream);
            learningModel.session = new LearningModelSession(learningModel.model);
            learningModel.binding = new LearningModelBinding(learningModel.session);
            return learningModel;
        }
        public async Task<chatbot_model_TESTOutput> EvaluateAsync(chatbot_model_TESTInput input)
        {
            binding.Bind("dense_input", input.dense_input);
            var result = await session.EvaluateAsync(binding, "0");
            var output = new chatbot_model_TESTOutput();
            output.dense_output = result.Outputs["dense_2"] as TensorFloat;
            return output;
        }
    }
}

